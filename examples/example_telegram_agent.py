import os
import sys
import asyncio
import logging
from typing import Optional, Dict, Any
from datetime import datetime
from functools import partial

# –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ PYTHONPATH
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from utils import Config, init_logging, setup_logger, get_timezone
from llm import LLMRouter
from core import BaseAgent
from plugins.telegram_plugin.plugin import TelegramPlugin
from plugins.scheduler_plugin.plugin import SchedulerPlugin
from plugins.example_plugin import CalculatorPlugin
from plugins.internet_plugin.plugin import InternetPlugin

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
config = Config.load()

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è LLM
LLM_CONFIG = {
    "provider": "deepseek",
    "model": "deepseek-chat",
    "api_key": config.deepseek_api_key,
    #"provider": "ollama",
    #"model": "llama3.1",
    #"api_key": "ollama",
    "temperature": 0  # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É (0.0 - –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã, 1.0 - –±–æ–ª–µ–µ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ)
}

# –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –∞–≥–µ–Ω—Ç–∞
SYSTEM_PROMPT = """
–¢—ã - –ø–æ–ª–µ–∑–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. 

–¢—ã –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ.

–ù–µ –∏—Å–ø–æ–ª—å–∑—É–π –ø–æ–≤—Ç–æ—Ä–Ω–æ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–≤–∞–∂–¥—ã.
–ò—Å–ø–æ–ª—å–∑—É–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω—É–∂–Ω–æ.
""".strip()

#init_logging(level=logging.DEBUG)
logger = setup_logger(__name__)

async def main():
    """–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
        if not config.telegram_token:
            raise ValueError("Telegram token not provided in config")
            
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º LLM
        llm = LLMRouter().create_instance(**LLM_CONFIG)
        
        # –°–æ–∑–¥–∞–µ–º –∞–≥–µ–Ω—Ç–∞, –ø–ª–∞–≥–∏–Ω—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Ç—Å—è –≤—Ä—É—á–Ω—É—é
        agent = BaseAgent(llm=llm, auto_load_plugins=False)
        
        # –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –Ω–∞–±–æ—Ä –ø–ª–∞–≥–∏–Ω–æ–≤
        telegram = TelegramPlugin(telegram_user_id="test_user")
        scheduler = SchedulerPlugin(
            tick_interval=1.0,
            timezone=str(get_timezone())
        )
        calculator = CalculatorPlugin()
        internet = InternetPlugin(
            max_search_results=5,  # –ú–∞–∫—Å–∏–º—É–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
            min_word_count=20      # –ú–∏–Ω–∏–º—É–º —Å–ª–æ–≤ –≤ –±–ª–æ–∫–µ —Ç–µ–∫—Å—Ç–∞
        )
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–ª–∞–≥–∏–Ω—ã
        telegram_status = await telegram.setup(token=config.telegram_token)
        await scheduler.setup()
        await calculator.setup()
        await internet.setup()
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–ª–∞–≥–∏–Ω—ã
        agent.plugin_manager.register_plugin("telegram", telegram)
        agent.plugin_manager.register_plugin("scheduler", scheduler)
        agent.plugin_manager.register_plugin("calculator", calculator)
        agent.plugin_manager.register_plugin("internet", internet)
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫ —Ç–µ–ª–µ–≥—Ä–∞–º—É —Å –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        telegram.set_message_handler(
            partial(
                agent.handle_message,
                system_prompt=SYSTEM_PROMPT,
                stream=True  # –í–∫–ª—é—á–∞–µ–º —Å—Ç—Ä–∏–º–∏–Ω–≥
            )
        )
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≥–µ–Ω—Ç–∞
        await agent.start()
        
        print("\nüëã –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")

        # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç—É—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        if telegram_status["chat_status"] == "linked":
            print(f"\n‚úÖ –ü—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π —á–∞—Ç: {telegram_status['chat_id']}")
            await telegram.send_welcome_message(telegram_status['chat_id'])
        else:
            print("\nüîë –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–≤—è–∑–∞—Ç—å —á–∞—Ç")
            print(f"\nüîë –ö–ª—é—á –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏: {telegram_status['key']}")
            print(f"üîó –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: /start {telegram_status['key']}")

        # –°–æ–∑–¥–∞–µ–º future –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–∏–≥–Ω–∞–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        stop_event = asyncio.Event()
        
        def handle_interrupt():
            print("\n\nüëã –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞...")
            stop_event.set()
            
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ SIGINT (Ctrl+C)
        import signal
        loop = asyncio.get_running_loop()
        loop.add_signal_handler(signal.SIGINT, handle_interrupt)
        
        # –ñ–¥–µ–º —Å–∏–≥–Ω–∞–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        await stop_event.wait()
            
    except Exception as e:
        logger.exception("Unexpected error occurred")
        raise
    finally:
        print("\nüõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞...")
        if 'agent' in locals():
            await agent.cleanup()
        print("‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")


if __name__ == "__main__":
    asyncio.run(main()) 